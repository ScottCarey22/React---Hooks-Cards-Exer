{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nconst useFlip = function () {\n  _s();\n  let isFacingUp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const [isFlipped, setIsFlipped] = useState(isFacingUp);\n  const flip = () => {\n    setIsFlipped(isFacingUp => !isFacingUp);\n  };\n  return [isFlipped, flip];\n};\n_s(useFlip, \"bH1swOkEzTgrSCFZ9o0D8iAu9e0=\");\nconst useAxios = () => {};\nexport { useFlip };","map":{"version":3,"names":["React","useState","axios","useFlip","_s","isFacingUp","arguments","length","undefined","isFlipped","setIsFlipped","flip","useAxios"],"sources":["/Users/scott/Desktop/react-cards-pokemon/src/hook.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from \"axios\";\n\nconst useFlip = (isFacingUp = true) => {\n    const [isFlipped, setIsFlipped] = useState(isFacingUp);\n    const flip = () => {\n        setIsFlipped(isFacingUp => !isFacingUp)\n    };\n    return [isFlipped, flip];\n}\n\n\nconst useAxios = () => {\n\n}\n\n\n\nexport { useFlip };"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAuB;EAAAC,EAAA;EAAA,IAAtBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAC9B,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAACI,UAAU,CAAC;EACtD,MAAMM,IAAI,GAAGA,CAAA,KAAM;IACfD,YAAY,CAACL,UAAU,IAAI,CAACA,UAAU,CAAC;EAC3C,CAAC;EACD,OAAO,CAACI,SAAS,EAAEE,IAAI,CAAC;AAC5B,CAAC;AAAAP,EAAA,CANKD,OAAO;AASb,MAAMS,QAAQ,GAAGA,CAAA,KAAM,CAEvB,CAAC;AAID,SAAST,OAAO"},"metadata":{},"sourceType":"module"}